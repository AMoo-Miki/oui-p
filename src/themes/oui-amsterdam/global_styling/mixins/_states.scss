// In Amsterdam, focus rings default to the browser's `outline`
// However, some components need to be forced to have the same behavior
// This re-uses the same faux focus ring mixin, but adjusts the outline instead
// @param {size} Old param from default theme that won't be used, so it should always be `null`
// @param {offset} Accepts a specific number or 'inner' or 'outer' to adjust outline position
@mixin ouiFocusRing($size: null, $offset: false) {
  // Safari & Firefox
  outline: $ouiFocusRingSize solid currentColor;

  // Chrome
  &:focus-visible {
    outline-style: auto;
  }

  &:not(:focus-visible) {
    outline: none;
  }

  // Adjusting position with offset
  @if (type-of($offset) == number) {
    outline-offset: #{$offset}px;
  } @else if ($offset == 'inner') {
    outline-offset: -$ouiFocusRingSize;
  } @else if ($offset == 'outer') {
    outline-offset: $ouiFocusRingSize;
  }
}

// Amsterdam uses transparency instead of shading/tinting
@mixin ouiFocusBackground($color: $ouiColorPrimary) {
  background-color: transparentize($color, $ouiFocusTransparency);
}

@mixin ouiHoverState {
  cursor: pointer;
  text-decoration: underline;
}

@mixin ouiFocusState($color: $ouiColorPrimary) {
  @include ouiHoverState;
  @include ouiFocusBackground($color);
}

@mixin ouiDisabledState($color: $ouiButtonColorDisabledText) {
  cursor: not-allowed;
  text-decoration: none;

  @if ($color) {
    color: $color;
  }
}

@mixin ouiInteractiveStates($focusColor: $ouiColorPrimary, $disabledColor: $ouiButtonColorDisabledText) {
  &:hover {
    @include ouiHoverState;
  }

  &:focus {
    @include ouiFocusState($focusColor);
  }

  &:disabled {
    @include ouiDisabledState($disabledColor);
  }
}

