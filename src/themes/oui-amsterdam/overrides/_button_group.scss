// This file has lots of modifiers and is somewhat nesty by nature
// sass-lint:disable nesting-depth

.ouiButtonGroup__buttons {
  box-shadow: none !important; // sass-lint:disable-line no-important
}

.ouiButtonGroup--medium,
.ouiButtonGroup--small {
  .ouiButtonGroupButton {
    border: none !important; // sass-lint:disable-line no-important

    // Complicated set of focus states depending on whether it's a button and can receive :focus,
    // or an input and uses focus-within, and browser support for :focus-visible
    &:focus,
    &:focus-within {
      outline-style: solid;
      outline-color: lightOrDarkTheme($ouiColorInk, $ouiColorGhost);
      outline-offset: -2px;

      &:focus-visible {
        outline-style: auto; // For chrome only
      }
    }

    &:focus:not(:focus-visible) {
      outline: none;
    }
  }

  .ouiButtonGroupButton-isDisabled:not(.ouiButtonGroupButton--ghost):not(.ouiButtonGroupButton-isSelected) {
    $backgroundColorSimulated: mix($ouiPageBackgroundColor, $ouiButtonColorDisabled, 70%);
    background-color: transparentize($ouiButtonColorDisabled, .7);
    color: makeHighContrastColor($ouiButtonColorDisabled, $backgroundColorSimulated, 2);
  }

  // Change the hollow (bordered) buttons to have a transparent background
  // and no border
  @each $name, $color in $ouiButtonTypes {
    .ouiButtonGroupButton--#{$name} {
      @include ouiButtonDefaultStyle($color);

      @if ($name == 'ghost') {
        // Ghost is unique and ALWAYS sits against a dark background.
        $backgroundColorSimulated: mix($ouiColorInk, $color, 70%);
        color: makeHighContrastColor($color, $backgroundColorSimulated);
      }
    }
  }

  .ouiButtonGroupButton-isDisabled.ouiButtonGroupButton--ghost:not(.ouiButtonGroupButton-isSelected) {
    &,
    &:hover,
    &:focus {
      background-color: transparentize($ouiButtonColorGhostDisabled, .7);
    }
  }
}

.ouiButtonGroup--small .ouiButtonGroup__buttons {
  // Use a moderately smaller radius on small buttons
  // so that they don't appear completely rounded
  border-radius: $ouiBorderRadius * (2 / 3);
}

.ouiButtonGroup--compressed .ouiButtonGroupButton {
  // Add 1 to the border radius to account for the background-clip
  border-radius: $ouiFormControlCompressedBorderRadius + 1;

  @each $name, $color in $ouiButtonTypes {
    &--#{$name} {
      // Complicated set of focus states depending on whether it's a button and can receive :focus,
      // or an input and uses focus-within, and browser support for :focus-visible,
      // and override nature of default theme
      &:not([class*='isDisabled']):focus,
      &:not([class*='isDisabled']):focus-within {
        outline-color: $color;

        &:focus-visible {
          outline-style: auto; // For chrome only
        }
      }

      &:not([class*='isDisabled']):focus:not(:focus-visible) {
        outline: none;
      }
    }
  }
}
